import os
import requests
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, filters

# Environment variables (set these in Render environment)
TOKEN = os.getenv("BOT_TOKEN")
PAYPAL_CLIENT_ID = os.getenv("PAYPAL_CLIENT_ID")
PAYPAL_CLIENT_SECRET = os.getenv("PAYPAL_CLIENT_SECRET")
BASE_URL = os.getenv("BASE_URL")  # e.g., https://your-app.onrender.com

# Initialize bot and Flask app
bot = Bot(token=TOKEN)
app = Flask(__name__)

def get_paypal_access_token():
    response = requests.post(
        "https://api-m.sandbox.paypal.com/v1/oauth2/token",
        headers={"Accept": "application/json"},
        data={"grant_type": "client_credentials"},
        auth=(PAYPAL_CLIENT_ID, PAYPAL_CLIENT_SECRET)
    )
    return response.json().get("access_token")


def verify_payment(order_id):
    token = get_paypal_access_token()
    response = requests.get(
        f"https://api-m.sandbox.paypal.com/v2/checkout/orders/{order_id}",
        headers={"Authorization": f"Bearer {token}"}
    )
    return response.json().get("status") == "COMPLETED"

# Media file paths
TEASER_VIDEO = 'sample.mp4'       # teaser video in repo root
FULL_VIDEO = 'full_video.mp4'     # full video in repo root
PRICE_USD = 5                     # price in USD

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

# Bot command handlers
def start(update, context):
    chat_id = update.effective_chat.id
    bot.send_video(chat_id, video=open(TEASER_VIDEO, 'rb'), caption="This is a teaser video.")
    bot.send_message(chat_id, f"To unlock the full video, pay ${PRICE_USD} and send back PAYPAL_ORDER_<order_id>.")


def handle_message(update, context):
    chat_id = update.effective_chat.id
    text = update.message.text.strip()

    if text.startswith("PAYPAL_ORDER_"):
        order_id = text.split("PAYPAL_ORDER_")[1]
        if verify_payment(order_id):
            bot.send_message(chat_id, "Payment verified! Sending full video now.")
            bot.send_video(chat_id, video=open(FULL_VIDEO, 'rb'))
        else:
            bot.send_message(chat_id, "Payment not verified. Please check your order ID.")
    else:
        bot.send_message(chat_id, "Invalid command. After payment, send PAYPAL_ORDER_<order_id>.")

# Set webhook

def set_webhook():
    bot.set_webhook(f"{BASE_URL}/{TOKEN}")

# Dispatcher setup

dispatcher = Dispatcher(bot, None, workers=0)
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

if __name__ == "__main__":
    set_webhook()
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", "5000")))

